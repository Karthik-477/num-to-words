{
	"name": "df_external_call",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "externalCall1",
					"linkedService": {
						"referenceName": "RestService1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          first_name as string,",
				"          last_name as string,",
				"          email as string,",
				"          gender as string,",
				"          ip_address as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 call(mapColumn(",
				"          each(match(/* All input columns */ true()),",
				"               /* Input name */ $$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     output(",
				"          headers as [string,string],",
				"          status as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     format: 'rest',",
				"     store: 'restservice',",
				"     timeout: 30,",
				"     requestInterval: 0,",
				"     httpMethod: 'GET',",
				"     headerColumnName: 'headers',",
				"     bodyColumnName: 'body',",
				"     statusColumnName: 'status',",
				"     addResponseCode: true,",
				"     requestFormat: ['type' -> 'json'],",
				"     responseFormat: ['type' -> 'json', 'documentForm' -> 'documentPerLine']) ~> externalCall1",
				"externalCall1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          id = rank,",
				"          first_name,",
				"          last_name,",
				"          email,",
				"          ip_address,",
				"          counts",
				"     )) ~> sink1"
			]
		}
	}
}